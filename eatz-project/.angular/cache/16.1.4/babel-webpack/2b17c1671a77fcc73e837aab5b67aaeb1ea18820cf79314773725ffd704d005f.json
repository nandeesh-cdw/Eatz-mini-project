{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class DateCustomPipe {\n  transform(value) {\n    const date = new Date(value);\n    const day = date.getDate();\n    const month = date.toLocaleString('default', {\n      month: 'long'\n    });\n    const year = date.getFullYear();\n    const hours = date.getHours();\n    const minutes = date.getMinutes();\n    let period = 'am';\n    if (hours >= 12) {\n      period = 'pm';\n    }\n    const displayHours = hours % 12 || 12;\n    const formattedDate = `${day}${this.getOrdinalSuffix(day)} ${month} ${year},${displayHours}:${this.padZero(minutes)}${period}`;\n    return formattedDate;\n  }\n  getOrdinalSuffix(day) {\n    if (day >= 11 && day <= 13) {\n      return 'th';\n    }\n    const lastDigit = day % 10;\n    switch (lastDigit) {\n      case 1:\n        return 'st';\n      case 2:\n        return 'nd';\n      case 3:\n        return 'rd';\n      default:\n        return 'th';\n    }\n  }\n  padZero(number) {\n    return number.toString().padStart(2, '0');\n  }\n}\nDateCustomPipe.Éµfac = function DateCustomPipe_Factory(t) {\n  return new (t || DateCustomPipe)();\n};\nDateCustomPipe.Éµpipe = /*@__PURE__*/i0.ÉµÉµdefinePipe({\n  name: \"dateCustom\",\n  type: DateCustomPipe,\n  pure: true\n});","map":{"version":3,"names":["DateCustomPipe","transform","value","date","Date","day","getDate","month","toLocaleString","year","getFullYear","hours","getHours","minutes","getMinutes","period","displayHours","formattedDate","getOrdinalSuffix","padZero","lastDigit","number","toString","padStart","pure"],"sources":["/Users/nandeesh/Documents/GitHub/Eatz-mini-project/eatz-project/src/app/shared/pipes/date-custom.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'dateCustom'\n})\nexport class DateCustomPipe implements PipeTransform {\n\n  transform(value: any): string {\n    const date = new Date(value);\n    const day = date.getDate();\n    const month = date.toLocaleString('default', { month: 'long' });\n    const year = date.getFullYear();\n    const hours = date.getHours();\n    const minutes = date.getMinutes();\n\n    let period = 'am';\n    if (hours >= 12) {\n      period = 'pm';\n    }\n    const displayHours = hours % 12 || 12;\n\n    const formattedDate = `${day}${this.getOrdinalSuffix(day)} ${month} ${year},${displayHours}:${this.padZero(minutes)}${period}`;\n    return formattedDate;\n  }\n\n  private getOrdinalSuffix(day: number): string {\n    if (day >= 11 && day <= 13) {\n      return 'th';\n    }\n  \n    const lastDigit = day % 10;\n    switch (lastDigit) {\n      case 1:\n        return 'st';\n      case 2:\n        return 'nd';\n      case 3:\n        return 'rd';\n      default:\n        return 'th';\n    }\n  }\n\n  private padZero(number: number): string {\n    return number.toString().padStart(2, '0');\n  }\n\n}\n"],"mappings":";AAKA,OAAM,MAAOA,cAAc;EAEzBC,SAASA,CAACC,KAAU;IAClB,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,KAAK,CAAC;IAC5B,MAAMG,GAAG,GAAGF,IAAI,CAACG,OAAO,EAAE;IAC1B,MAAMC,KAAK,GAAGJ,IAAI,CAACK,cAAc,CAAC,SAAS,EAAE;MAAED,KAAK,EAAE;IAAM,CAAE,CAAC;IAC/D,MAAME,IAAI,GAAGN,IAAI,CAACO,WAAW,EAAE;IAC/B,MAAMC,KAAK,GAAGR,IAAI,CAACS,QAAQ,EAAE;IAC7B,MAAMC,OAAO,GAAGV,IAAI,CAACW,UAAU,EAAE;IAEjC,IAAIC,MAAM,GAAG,IAAI;IACjB,IAAIJ,KAAK,IAAI,EAAE,EAAE;MACfI,MAAM,GAAG,IAAI;;IAEf,MAAMC,YAAY,GAAGL,KAAK,GAAG,EAAE,IAAI,EAAE;IAErC,MAAMM,aAAa,GAAG,GAAGZ,GAAG,GAAG,IAAI,CAACa,gBAAgB,CAACb,GAAG,CAAC,IAAIE,KAAK,IAAIE,IAAI,IAAIO,YAAY,IAAI,IAAI,CAACG,OAAO,CAACN,OAAO,CAAC,GAAGE,MAAM,EAAE;IAC9H,OAAOE,aAAa;EACtB;EAEQC,gBAAgBA,CAACb,GAAW;IAClC,IAAIA,GAAG,IAAI,EAAE,IAAIA,GAAG,IAAI,EAAE,EAAE;MAC1B,OAAO,IAAI;;IAGb,MAAMe,SAAS,GAAGf,GAAG,GAAG,EAAE;IAC1B,QAAQe,SAAS;MACf,KAAK,CAAC;QACJ,OAAO,IAAI;MACb,KAAK,CAAC;QACJ,OAAO,IAAI;MACb,KAAK,CAAC;QACJ,OAAO,IAAI;MACb;QACE,OAAO,IAAI;;EAEjB;EAEQD,OAAOA,CAACE,MAAc;IAC5B,OAAOA,MAAM,CAACC,QAAQ,EAAE,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EAC3C;;AAxCWvB,cAAc,C;mBAAdA,cAAc;AAAA;AAAdA,cAAc,C;;QAAdA,cAAc;EAAAwB,IAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}